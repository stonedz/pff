#!/bin/bash

green='\e[0;32m'
GREEN='\e[1;32m'
red='\e[0;31m'
RED='\e[1;31m'
blue='\e[0;34m'
BLUE='\e[1;34m'
cyan='\e[0;36m'
CYAN='\e[1;36m'
NC='\e[0m' # No Color

function help() {
    echo -e "${NC}-f    Force the update";
}

echo -e "${GREEN}========== \n${BLUE} pf${RED}f ${BLUE}init \n${GREEN}=========="

# Gets the parameters
while getopts ":f" opt; do
    case $opt in
        f)
            force=true
            echo -e "${red}Force update!"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            echo -e "\n"
            help
            exit
            ;;
    esac
done


# command line dependecies"
CMDS="curl"

#######################################
# START
#######################################
fail=false

# CHECK FOR DEPENDENCIES
echo -ne "${CYAN}Checking dependencies..."
for i in $CMDS
do
    # command -v will return >0 when the $i is not found
    command -v $i >/dev/null && continue || { echo -e "${RED} $i command not found, please install it!."; exit 1; }
done
echo -e "${GREEN}[OK]"

# COMPOSER
if [ -f composer.phar -a "$1" != "-f" ]
then
    echo -e "\n${GREEN}* [OK] ${BLUE}Composer is already installed"
else
    echo -ne "\n${CYAN}Installing Composer..."
    curl -s http://getcomposer.org/installer | php &> /dev/null
    echo -e "${GREEN}[OK]"
fi


# Clean old htmlpurifier if prensent
if [ -d ../lib/vendor/htmlpurifier-4.4.0-standalone ]
then
    echo -ne "\n${CYAN}Clean old packages..."
    rm -rf ../lib/vendor/htmlpurifier-4.4.0-standalone
    echo -e "${GREEN}[OK]"
fi

# INSTALL COMPOSER PACKAGES
if [ -f composer.phar ]
then
    tmp=`pwd`
    cd ../lib
    php ../scripts/composer.phar update
    cd $tmp
fi

# BEHAT
if [ -f behat.phar -a "$1" != "-f" ]
then
    echo -e "\n${GREEN}* [OK] ${BLUE}Behat is already installed"
else
    echo -ne "\n${CYAN}Installing Behat..."
    wget -qO - https://github.com/downloads/Behat/Behat/behat.phar > behat.phar
    echo -e "${GREEN}[OK]"
fi

# HTMLPURIFIER STANDALONE
#if [ -f ../lib/vendor/htmlpurifier-4.4.0-standalone//HTMLPurifier.standalone.php -a "$1" != "-f" ]
#then
#    echo -e "\n${GREEN}* [OK] ${BLUE}HTMLPurifier is already installed"
#else
#    echo -ne "\n${CYAN}Installing Htmlpurifier..."
#    wget -q http://htmlpurifier.org/releases/htmlpurifier-4.4.0-standalone.tar.gz
#    if [ -f  htmlpurifier-4.4.0-standalone.tar.gz ]
#    then
#        tar -xzvf htmlpurifier-4.4.0-standalone.tar.gz -C ../lib/vendor/ > /dev/null
#        rm htmlpurifier-4.4.0-standalone.tar.gz
#        echo -e "${GREEN}[OK]"
#    else
#        fail=true
#        echo -e "${RED}[FAIL]"
#    fi
#fi

# GENERATE app FOLDER
echo -ne "\n${CYAN}Initializing app..."
tmp=`pwd`
cd ..
if [ ! -d "app" ]
then
    cp -r lib/app_skeleton app/
    git init app/ &> /dev/null
    echo -e "${GREEN}[OK]"
else
    echo -e "${GREEN}[OK]${NC} (app/ folder already present)"
fi
cd $tmp

#GIT Hooks
echo -ne "\n${CYAN}Installing git post-merge hook..."
tmp=`pwd`
cd ../.git/hooks
if [ -x post-merge ];
then
    echo -e "${red}[WARNING] ${NC}post-merge hook seems to be already installed, please add the following lines to .git/hooks/post-merge if needed:\n
    cd scripts
    ./update
    cd .."
else
    touch post-merge
    echo "#!/bin/bash

cd scripts
./update
cd .." > post-merge
    chmod +x post-merge
    echo -e "${GREEN}[OK]"
fi
cd ${tmp}

#Generate autoload files
if ! command -v phpab &> /dev/null
then
    echo -e "\n${RED}[FAIL] Phpab command not found! install with the following commands \n
     pear channel-discover pear.netpirates.net \n
     pear channel-discover components.ez.no \n
     pear install theseer/Autoload"
    fail=true
else
    echo -ne "\n${CYAN}Generating autoload.php files..."
    sh generateAutoload.sh &> /dev/null
    echo -e "${GREEN}[OK]"
fi



# Final message
if [ "$fail" == "false" ]
then
    echo -e "\n${NC}Everything should be in place :D Have fun!"
else
    echo -e "\n${red}Something went wrong!${NC}"
fi
